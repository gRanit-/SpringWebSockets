<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:social="http://www.springframework.org/schema/social"
       xmlns:facebook="http://www.springframework.org/schema/social/facebook"
       xsi:schemaLocation="http://www.springframework.org/schema/beans

	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd
	http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd

       http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
	">

    <bean id="encoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <bean id="textEncryptor"
          class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText"/>

    <facebook:config app-id="${facebook.app.id}" app-secret="${facebook.app.secret}"/>

    <social:jdbc-connection-repository/>

    <bean id="connectController" class="org.springframework.social.connect.web.ConnectController"
          autowire="constructor"/>

    <bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>


   <!-- <security:http pattern="/static/**" security="none"/>-->


    <security:http use-expressions="true">


        <!-- Enables Spring Security CSRF protection -->
        <security:csrf/>
        <!-- Configures the form login -->
        <security:form-login
                login-page="/login"
                login-processing-url="/login/authenticate"
                authentication-failure-url="/login?error=bad_credentials"
                username-parameter="username"
                password-parameter="password"/>
        <!-- Configures the logout function -->
        <security:logout
                logout-url="/logout"
                logout-success-url="/login"
                delete-cookies="JESSIONID"/>
        <!-- Anyone can access these urls -->

        <security:intercept-url pattern="/auth/**" access="permitAll"/>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/signin/**" access="permitAll"/>
        <security:intercept-url pattern="/signup/**" access="permitAll"/>
        <security:intercept-url pattern="/user/register/**" access="permitAll"/>


        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <!-- Adds social authentication filter to the Spring Security filter chain. -->
        <security:custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER"/>
    </security:http>

    <security:global-method-security
            pre-post-annotations="enabled" />

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>

        <security:authentication-provider ref="socialAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <constructor-arg index="0" ref="authenticationManager"/>
        <constructor-arg index="1" ref="userIdSource"/>
        <constructor-arg index="2" ref="usersConnectionRepository"/>
        <constructor-arg index="3" ref="connectionFactoryLocator"/>
        <property name="signupUrl" value="/signUp"/>
    </bean>

    <bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider"
          autowire="constructor">

    </bean>

    <bean id="springSecurityFilterChain"
          class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map request-matcher="ant" >
            <security:filter-chain pattern="/*" filters="sif" />
        </security:filter-chain-map>
    </bean>

    <bean id="sif"
                class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />
</beans>